- hosts: all
  gather_facts: no
  vars:
    tmux_version: "3.1b"
  tasks:

    - name: Get installed tmux version
      shell: tmux -V
      register: get_tmux_ver
      ignore_errors: yes

    - name: Remove tmux installed from apt
      apt:
        name: tmux
        state: absent
      become: yes
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Install prerequisites
      apt:
        pkg:
          - libevent-dev
          - ncurses-dev
          - build-essential
          - bison
          - pkg-config
          - make
          - xsel
        state: latest
        update_cache: yes
      become: yes
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Create directory ~/tmuxNOC
      file:
        path: ~/tmuxNOC
        state: directory

    - name: "Download tmux version {{ tmux_version }}"
      get_url:
        url: "https://github.com/tmux/tmux/releases/download/{{ tmux_version }}/tmux-{{ tmux_version }}.tar.gz"
        dest: ~/tmuxNOC
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Create temporary directory for tmux build.
      tempfile:
        state: directory
        suffix: tmux_temp
      register: tmux_temp_dir
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: "Unpack tmux version {{ tmux_version }}"
      unarchive:
        src: "~/tmuxNOC/tmux-{{ tmux_version }}.tar.gz"
        dest: "{{ tmux_temp_dir.path }}"
        remote_src: yes
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Delete tmux archive
      file:
        path: "~/tmuxNOC/tmux-{{ tmux_version }}.tar.gz"
        state: absent
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Run ./configure
      shell: ./configure
      args:
        chdir: "{{ tmux_temp_dir.path }}/tmux-{{ tmux_version }}"
      register: configure_output
      failed_when: configure_output.stderr
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Make tmux from source
      make:
        chdir: "{{ tmux_temp_dir.path }}/tmux-{{ tmux_version }}"
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Install tmux
      make:
        chdir: "{{ tmux_temp_dir.path }}/tmux-{{ tmux_version }}"
        target: install
      become: yes
      when: "tmux_version not in get_tmux_ver.stdout"

    - name: Install or update Tmux Plugin Manager
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/tmuxNOC/plugins/tpm

    - name: Checking for ~/.tmux.conf
      stat:
        path: ~/.tmux.conf
      register: tmux_conf_file

    - name: Move ~/.tmux.conf to ~/.tmux.conf.bak
      shell: mv ~/.tmux.conf ~/.tmux.conf.bak
      when: tmux_conf_file.stat.exists

    - name: Copy .tmux.conf
      copy:
        src: tmux.conf
        dest: ~/tmuxNOC/tmux.conf

    - name: Copy tmux.remote.conf
      copy:
        src: tmux.remote.conf
        dest: ~/tmuxNOC/tmux.remote.conf

    - name: Create ~/tmuxNOC/scripts
      file:
        path: ~/tmuxNOC/scripts
        state: directory

    - name: Copy yank.sh
      copy:
        src: ./scripts/yank.sh
        dest: ~/tmuxNOC/scripts/yank.sh
        mode: '700'

    - name: Link .tmux.conf with ~/tmuxNOC/tmux.conf
      file:
        src: ~/tmuxNOC/tmux.conf
        dest: ~/.tmux.conf
        state: link

    - name: Installing tmux plugins
      block:
        - shell: tmux new -d -s __noop >/dev/null 2>&1
        - shell: tmux set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/tmuxNOC/plugins"
        - shell: ~/tmuxNOC/plugins/tpm/bin/install_plugins
        - shell: tmux kill-session -t __noop >/dev/null 2>&1
